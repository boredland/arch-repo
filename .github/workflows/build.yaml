name: prepare
on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 1 * * *"
env:
  BUILD_DIR: /builder/build
  REPO_DIR: /builder/repository

jobs:
  release:
    runs-on: ubuntu-latest
    container:
      image: docker://boredland/manjaro-builder:latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: prepare_env
        run: |
          echo "ARCH=`uname -a | sed -E 's/.+ (.+) .+/\1/'`" >> $GITHUB_ENV
          echo "OWNER=${GITHUB_REPOSITORY%/*}" >> $GITHUB_ENV
          echo "REPO=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

          source $GITHUB_ENV
          source $GITHUB_WORKSPACE/helpers.sh

          substitute repo.conf
          substitute index.template.html

          echo "Include = /etc/pacman.d/*" >>/etc/pacman.conf
          cp -f repo.conf /etc/pacman.d/

          echo "COMPRESSXZ=(xz -c -z -)">>/etc/makepkg.conf

          useradd -d /builder -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >>/etc/sudoers
          mkdir -p ${BUILD_DIR} && chown -R builder:builder ${BUILD_DIR}
          
          rm -rf ${REPO_DIR}/${ARCH}
          mkdir -p ${REPO_DIR}/${ARCH}

      - name: prepare_work
        run: |
          pacman -Syyu --noconfirm

          source $GITHUB_WORKSPACE/helpers.sh
          make_worklist

          pacman -Sw --noconfirm $(cat download.tmp | tr -s '\n' ' ')

          while read PKG || [[ -n $PKG ]]; do
            cp -f /var/cache/pacman/pkg/${PKG}*.pkg.tar.zst ${REPO_DIR}/${ARCH}
          done <download.tmp

      - name: build_aur_pkg
        run: |  
          sudo -u builder yay -Sy --builddir ${BUILD_DIR} --noconfirm --nopgpfetch $(cat build.tmp | tr -s '\n' ' ')
          while read PKG || [[ -n $PKG ]]; do
            find ${BUILD_DIR} -name ${PKG}*.pkg.tar.zst -exec cp -f {} ${REPO_DIR}/${ARCH}/ \;
          done <build.tmp

      - name: build_custom_pkg
        run: |
          chown -R builder ./custom
          cd custom
          for PKG in *.PKGBUILD; do 
            sudo -u builder makepkg --clean -s -p $PKG --noconfirm
            cp -f ${PKG%.PKGBUILD}*.pkg.tar.zst ${REPO_DIR}/${ARCH}/
          done

      - name: prepare_gh_pages
        run: |
          cd ${REPO_DIR}/${ARCH}/
          repo-add ${OWNER}.db.tar.gz *.pkg.tar.zst

          mv ${REPO_DIR} $GITHUB_WORKSPACE/gh-pages

          cp $GITHUB_WORKSPACE/index.template.html $GITHUB_WORKSPACE/gh-pages/index.html
          mkdir $GITHUB_WORKSPACE/gh-pages/_includes && cp $GITHUB_WORKSPACE/repo.conf $GITHUB_WORKSPACE/gh-pages/_includes/repo.conf

      - name: deploy
        uses: crazy-max/ghaction-github-pages@v1
        with:
          target_branch: gh-pages
          build_dir: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
