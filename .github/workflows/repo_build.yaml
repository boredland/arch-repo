name: repo_build
on:
  repository_dispatch:
    types: [dependency_update]
  push:
    branches:
      - master
env:
  BUILD_DIR: /builder/build
  REPO_DIR: /builder/repository

jobs:
  release:
    runs-on: ubuntu-latest
    container:
      image: docker://boredland/manjaro-builder:latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: prepare_env
        run: |
          echo "ARCH=`uname -a | sed -E 's/.+ (.+) .+/\1/'`" >> $GITHUB_ENV
          echo "OWNER=${GITHUB_REPOSITORY%/*}" >> $GITHUB_ENV
          echo "REPO=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

          source $GITHUB_ENV
          source $GITHUB_WORKSPACE/helpers.sh

          substitute repo.conf
          substitute index.template.html

          echo "Include = /etc/pacman.d/*" >>/etc/pacman.conf

          echo "COMPRESSXZ=(xz -c -z -)">>/etc/makepkg.conf

          useradd -d /builder -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >>/etc/sudoers
          mkdir -p ${BUILD_DIR} && chown -R builder:builder ${BUILD_DIR}
          
          rm -rf ${REPO_DIR}/${ARCH}
          mkdir -p ${REPO_DIR}/${ARCH}

          sudo -u builder gpg --recv-key E25D679AF73C6D2F

          pacman -Syyu --noconfirm

      - name: prepare_work
        run: |
          source $GITHUB_WORKSPACE/helpers.sh
          cp -f repo.conf /etc/pacman.d/
          pacman -Sy || echo "warn: problems in custom repo!"
          make_worklist

          if test -f "download.tmp"; then
            pacman -Sw --noconfirm $(cat download.tmp | tr -s '\n' ' ')

            while read PKG || [[ -n $PKG ]]; do
              cp -f /var/cache/pacman/pkg/${PKG}*.pkg.tar.zst ${REPO_DIR}/${ARCH}
            done <download.tmp
          fi
          rm -f /etc/pacman.d/repo.conf
          pacman -Sy

      - name: build_aur_pkg
        run: |  
          if test -f "build.tmp"; then
            cat build.tmp
            sudo -u builder yay -S --builddir ${BUILD_DIR} --noconfirm --nopgpfetch $(cat build.tmp | tr -s '\n' ' ')
            while read PKG || [[ -n $PKG ]]; do
              find ${BUILD_DIR} -name ${PKG}*.pkg.tar.zst -exec cp -f {} ${REPO_DIR}/${ARCH}/ \;
            done <build.tmp
          fi

      - name: build_custom_pkg
        run: |
          cp -f repo.conf /etc/pacman.d/
          pacman -Sy
          chown -R builder ./custom
          cd custom
          for PKG in *; do
            cd $PKG
            [ -d "source" ] && rm -rf src && mkdir -p src && cp -rf source/* src
            [ -d "src" ] && chown -R builder src
            sudo -u builder makepkg --clean -s --noconfirm
            cp -f ${PKG}*.pkg.tar.zst ${REPO_DIR}/${ARCH}/
            cd ..
          done

      - name: prepare_gh_pages
        run: |
          cd ${REPO_DIR}/${ARCH}/
          repo-add ${OWNER}.db.tar.gz *.pkg.tar.zst
          ls -l ${REPO_DIR}/${ARCH}/

          mv ${REPO_DIR} $GITHUB_WORKSPACE/gh-pages

          cp $GITHUB_WORKSPACE/index.template.html $GITHUB_WORKSPACE/gh-pages/index.html
          mkdir $GITHUB_WORKSPACE/gh-pages/_includes && cp $GITHUB_WORKSPACE/repo.conf $GITHUB_WORKSPACE/gh-pages/_includes/repo.conf

      - name: deploy
        uses: crazy-max/ghaction-github-pages@v1
        with:
          target_branch: gh-pages
          build_dir: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: jakejarvis/wait-action@master
        with:
          time: '120s'

      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.DISPATCH_TOKEN }}
          repository: boredland/manjaro-sway
          event-type: rebuild_image